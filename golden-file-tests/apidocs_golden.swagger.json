{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/things": {
      "post": {
        "externalDocs": {
          "url": ""
        },
        "operationId": "ThingService_CreateThing",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateThingRequestVariantB"
                  },
                  {
                    "$ref": "#/components/schemas/CreateThingRequestVariantA"
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateThingResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {}
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {}
            },
            "description": "Unauthorized request"
          },
          "500": {
            "content": {
              "application/json": {}
            },
            "description": "Internal server error"
          }
        },
        "summary": "Create Thing",
        "tags": [
          "Things Service"
        ]
      }
    },
    "/v1/things/{id}": {
      "get": {
        "externalDocs": {
          "url": ""
        },
        "operationId": "ThingService_GetThing",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetThingResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {}
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {}
            },
            "description": "Unauthorized request"
          },
          "500": {
            "content": {
              "application/json": {}
            },
            "description": "Internal server error"
          }
        },
        "summary": "Get Thing",
        "tags": [
          "Things Service"
        ]
      }
    },
    "/v1/things/{page_size}": {
      "get": {
        "externalDocs": {
          "url": ""
        },
        "operationId": "ThingService_ListThings",
        "parameters": [
          {
            "in": "path",
            "name": "page_size",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page_token",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListThingsResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {}
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {}
            },
            "description": "Unauthorized request"
          },
          "500": {
            "content": {
              "application/json": {}
            },
            "description": "Internal server error"
          }
        },
        "summary": "List Things",
        "tags": [
          "Things Service"
        ]
      }
    },
    "/v1/things/{thing_id}": {
      "put": {
        "externalDocs": {
          "url": ""
        },
        "operationId": "ThingService_ReplaceThing",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ThingVariantA"
                  },
                  {
                    "$ref": "#/components/schemas/ThingVariantB"
                  }
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplaceThingResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {}
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {}
            },
            "description": "Unauthorized request"
          },
          "500": {
            "content": {
              "application/json": {}
            },
            "description": "Internal server error"
          }
        },
        "summary": "Replace Thing",
        "tags": [
          "Things Service"
        ]
      },
      "delete": {
        "externalDocs": {
          "url": ""
        },
        "operationId": "ThingService_DeleteThing",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteThingResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {}
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {}
            },
            "description": "Unauthorized request"
          },
          "500": {
            "content": {
              "application/json": {}
            },
            "description": "Internal server error"
          }
        },
        "summary": "Delete Thing",
        "tags": [
          "Things Service"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AuditLogDescription": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Code": {
        "enum": [
          "OK",
          "CANCELLED",
          "UNKNOWN",
          "INVALID_ARGUMENT",
          "DEADLINE_EXCEEDED",
          "NOT_FOUND",
          "ALREADY_EXISTS",
          "PERMISSION_DENIED",
          "UNAUTHENTICATED",
          "RESOURCE_EXHAUSTED",
          "FAILED_PRECONDITION",
          "ABORTED",
          "OUT_OF_RANGE",
          "UNIMPLEMENTED",
          "INTERNAL",
          "UNAVAILABLE",
          "DATA_LOSS"
        ],
        "type": "string"
      },
      "CreateThingRequest": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/CreateThingRequestVariantB"
          },
          {
            "$ref": "#/components/schemas/CreateThingRequestVariantA"
          }
        ]
      },
      "CreateThingRequestVariantA": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-01-01T00:00:00Z"
          },
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "example": "A Thing's Name"
          },
          "nestedField": {
            "$ref": "#/components/schemas/NestedStruct"
          },
          "thingType": {
            "$ref": "#/components/schemas/ThingType"
          },
          "variantA": {
            "$ref": "#/components/schemas/PolymorphicVariantA"
          }
        }
      },
      "CreateThingRequestVariantB": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-01-01T00:00:00Z"
          },
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "example": "A Thing's Name"
          },
          "nestedField": {
            "$ref": "#/components/schemas/NestedStruct"
          },
          "thingType": {
            "$ref": "#/components/schemas/ThingType"
          },
          "variantB": {
            "$ref": "#/components/schemas/PolymorphicVariantB"
          }
        }
      },
      "CreateThingResponse": {
        "type": "object",
        "properties": {
          "thing": {
            "$ref": "#/components/schemas/Thing"
          }
        }
      },
      "DeleteThingRequest": {
        "type": "object",
        "properties": {
          "thingId": {
            "type": "string"
          }
        }
      },
      "DeleteThingResponse": {
        "type": "object"
      },
      "GetThingRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "GetThingResponse": {
        "type": "object",
        "properties": {
          "thing": {
            "$ref": "#/components/schemas/Thing"
          }
        }
      },
      "HttpRuleCustom": {
        "type": "object",
        "properties": {
          "additionalBindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HttpRule"
            }
          },
          "body": {
            "type": "string"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomHttpPattern"
          },
          "responseBody": {
            "type": "string"
          },
          "selector": {
            "type": "string"
          }
        }
      },
      "HttpRuleDelete": {
        "type": "object",
        "properties": {
          "additionalBindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HttpRule"
            }
          },
          "body": {
            "type": "string"
          },
          "delete": {
            "type": "string"
          },
          "responseBody": {
            "type": "string"
          },
          "selector": {
            "type": "string"
          }
        }
      },
      "HttpRuleGet": {
        "type": "object",
        "properties": {
          "additionalBindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HttpRule"
            }
          },
          "body": {
            "type": "string"
          },
          "get": {
            "type": "string"
          },
          "responseBody": {
            "type": "string"
          },
          "selector": {
            "type": "string"
          }
        }
      },
      "HttpRulePatch": {
        "type": "object",
        "properties": {
          "additionalBindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HttpRule"
            }
          },
          "body": {
            "type": "string"
          },
          "patch": {
            "type": "string"
          },
          "responseBody": {
            "type": "string"
          },
          "selector": {
            "type": "string"
          }
        }
      },
      "HttpRulePost": {
        "type": "object",
        "properties": {
          "additionalBindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HttpRule"
            }
          },
          "body": {
            "type": "string"
          },
          "post": {
            "type": "string"
          },
          "responseBody": {
            "type": "string"
          },
          "selector": {
            "type": "string"
          }
        }
      },
      "HttpRulePut": {
        "type": "object",
        "properties": {
          "additionalBindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HttpRule"
            }
          },
          "body": {
            "type": "string"
          },
          "put": {
            "type": "string"
          },
          "responseBody": {
            "type": "string"
          },
          "selector": {
            "type": "string"
          }
        }
      },
      "ListThingsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageToken": {
            "type": "string"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListThingsResponse": {
        "type": "object",
        "properties": {
          "nextPageToken": {
            "type": "string"
          },
          "things": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Thing"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NestedStruct": {
        "type": "object",
        "properties": {
          "numericField": {
            "type": "integer",
            "format": "int32"
          },
          "stringField": {
            "type": "string"
          }
        }
      },
      "PolymorphicVariantA": {
        "type": "object",
        "properties": {
          "fieldA": {
            "type": "string"
          }
        }
      },
      "PolymorphicVariantB": {
        "type": "object",
        "properties": {
          "fieldB": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ReplaceThingRequest": {
        "type": "object",
        "properties": {
          "thing": {
            "$ref": "#/components/schemas/Thing"
          },
          "thingId": {
            "type": "string"
          }
        }
      },
      "ReplaceThingResponse": {
        "type": "object",
        "properties": {
          "thing": {
            "$ref": "#/components/schemas/Thing"
          }
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Thing": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ThingVariantA"
          },
          {
            "$ref": "#/components/schemas/ThingVariantB"
          }
        ]
      },
      "ThingType": {
        "title": "ThingType",
        "enum": [
          "THING_TYPE_UNSPECIFIED",
          "THING_TYPE_STANDARD",
          "THING_TYPE_PREMIUM"
        ],
        "type": "string",
        "description": "The type of the thing."
      },
      "ThingVariantA": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-01-01T00:00:00Z"
          },
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "example": "A Thing's Name"
          },
          "nestedField": {
            "$ref": "#/components/schemas/NestedStruct"
          },
          "thingType": {
            "$ref": "#/components/schemas/ThingType"
          },
          "variantA": {
            "$ref": "#/components/schemas/PolymorphicVariantA"
          }
        }
      },
      "ThingVariantB": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-01-01T00:00:00Z"
          },
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "example": "A Thing's Name"
          },
          "nestedField": {
            "$ref": "#/components/schemas/NestedStruct"
          },
          "thingType": {
            "$ref": "#/components/schemas/ThingType"
          },
          "variantB": {
            "$ref": "#/components/schemas/PolymorphicVariantB"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Things Service",
      "description": "ThingService provides the API for managing things.",
      "externalDocs": {
        "url": ""
      }
    }
  ]
}
